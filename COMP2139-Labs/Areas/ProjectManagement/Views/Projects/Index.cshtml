@model List<Project>
@{
    ViewData["Title"] = "Projects";
    bool searchPerformed = ViewData["SearchPerformed"] as bool? ?? false;
    string searchString = ViewData["SearchString"] as string;
}

<h2>@ViewData["Title"]</h2>

@if (Model.Any()) {
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Summary</th>
                <th>Action</th> <!-- column for action buttons, details, edit, delete-->
            </tr>
        </thead>

        <tbody>
            @foreach (var project in Model) {
                <tr>
                    <td>@project.ProjectID</td>
                    <td>@project.Name</td>
                    <td>@project.Description</td>
                    <td>
                        @await Component.InvokeAsync("ProjectSummary", new {projectId = project.ProjectID})
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@project.ProjectID" class="btn btn-info">Details</a>
                        <a asp-controller="Tasks" asp-action="Index" asp-route-projectId="@project.ProjectID" class="btn btn-warning">View Tasks</a>
                        <a asp-action="Edit" asp-route-id="@project.ProjectID" class="btn btn-secondary">Edit</a>
                        <a asp-action="Delete" asp-route-id="@project.ProjectID" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
} else {
    if (searchPerformed) {
        <p>There are no projects with the name "@searchString".</p>
    } else {
        <p>No projects found.</p>
    }
}

<a asp-controller="Projects" asp-action="Create" class="btn btn-primary">Create New Project</a>